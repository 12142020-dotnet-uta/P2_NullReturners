# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core


trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

steps:
- task: SonarCloudPrepare@1
  displayName: 'SonarCloud Prepare'
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'p2nullreturners'
    scannerMode: 'MSBuild'
    projectKey: 'P2NullReturners_P2_NullReturners'
    projectName: 'P2_NullReturners'

- task: AzureAppServiceManage@0
  displayName: 'Stop Azure App Service'
  inputs:
    azureSubscription: 'Azure subscription 1(0cfa6593-af85-4dcb-b1a3-7ead93b8def2)'
    Action: 'Stop Azure App Service'
    WebAppName: 'nrteammanager'

- script: dotnet build ./Backend/P2_NullReturners.sln --configuration $(buildConfiguration)
  displayName: 'Dotnet Build'

- task: DotNetCoreCLI@2
  displayName: 'Dotnet Test'
  inputs:
    command: 'test'
    projects: '**/*Tests/*.csproj'
    arguments: --configuration $(buildConfiguration) --collect "Code Coverage"

- task: Npm@1
  displayName: 'NPM Install'
  inputs:
    command: 'install'
    workingDir: './Frontend/'

- task: Npm@1
  displayName: 'NPM Install Angular CLI'
  inputs:
    command: 'custom'
    workingDir: './Frontend/'
    customCommand: 'install -g @angular/cli@latest'

- task: Npm@1
  displayName: 'NPM Build Angular'
  inputs:
    command: 'custom'
    workingDir: './Frontend/'
    customCommand: 'run build'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish Cobertura Code Coverage'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Agent.TempDirectory)/*/coburtura/coverage.xml'

- task: SonarCloudAnalyze@1
  displayName: 'SonarCloud Analyze'

- task: SonarCloudPublish@1
  displayName: 'Publishing SonarCloud'
  inputs:
    pollingTimeoutSec: '300'

- task: DotNetCoreCLI@2
  displayName: 'Dotnet Publish and Zip'
  inputs:
    command: 'publish'
    publishWebProjects: true
    zipAfterPublish: true

- task: AzureRmWebAppDeployment@4
  displayName: 'Deploy to App Service'
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1(0cfa6593-af85-4dcb-b1a3-7ead93b8def2)'
    appType: 'webApp'
    WebAppName: 'nrteammanager'
    ResourceGroupName: 'P2Pipeline'
    SlotName: 'production'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'

- task: AzureAppServiceManage@0
  displayName: 'Start Azure App Service'
  inputs:
    azureSubscription: 'Azure subscription 1(0cfa6593-af85-4dcb-b1a3-7ead93b8def2)'
    Action: 'Start Azure App Service'
    WebAppName: 'nrteammanager'

